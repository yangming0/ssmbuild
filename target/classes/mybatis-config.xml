<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--    <settings>
        &lt;!&ndash; 打印查询语句 &ndash;&gt;
        <setting name="logImpl" value="STDOUT_LOGGING" />
        &lt;!&ndash; 控制全局缓存（二级缓存）&ndash;&gt;
        <setting name="cacheEnabled" value="true"/>
        &lt;!&ndash; 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。默认 false  &ndash;&gt;
        <setting name="lazyLoadingEnabled" value="true"/>
        &lt;!&ndash; 当开启时，任何方法的调用都会加载该对象的所有属性。默认 false，可通过select标签的 fetchType来覆盖&ndash;&gt;
        <setting name="aggressiveLazyLoading" value="false"/>
        &lt;!&ndash;  Mybatis 创建具有延迟加载能力的对象所用到的代理工具，默认JAVASSIST &ndash;&gt;
        &lt;!&ndash;<setting name="proxyFactory" value="CGLIB" />&ndash;&gt;
        &lt;!&ndash; STATEMENT级别的缓存，使一级缓存，只针对当前执行的这一statement有效 &ndash;&gt;
        &lt;!&ndash;
                <setting name="localCacheScope" value="STATEMENT"/>
        &ndash;&gt;
        <setting name="localCacheScope" value="SESSION"/>
    </settings>-->

    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <typeAliases>
        <package name="com.yang.pojo"/>
    </typeAliases>
    


    <!--    <typeHandlers>
            <typeHandler handler="com.wuzz.type.MyTypeHandler"></typeHandler>
        </typeHandlers>-->

    <!-- 对象工厂 -->
    <!--    <objectFactory type="com.wuzz.objectfactory.GPObjectFactory">
            <property name="wuzz" value="666"/>
        </objectFactory>-->

    <!--    <plugins>
            <plugin interceptor="com.wuzz.interceptor.SQLInterceptor">
                <property name="wuzz" value="betterme" />
            </plugin>
            <plugin interceptor="com.wuzz.interceptor.MyPageInterceptor">
            </plugin>
        </plugins>-->


    <mappers>
        <mapper class="com.yang.dao.BookMapper"/>
    </mappers>

</configuration>